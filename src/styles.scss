@use "sass:map";
@use "variables" as *;
@use "dark-mode" as *;

* {
  box-sizing: border-box;
}

html,
body {
  margin: 0;
  padding: 0;
  font-family: $font-main;
  font-size: map.get($font-sizes, base);
  min-height: 100vh;
}

body {
  background: $color-bg-gradient;
}

.content-container {
  opacity: 0;
  @include flex(column);
  padding: map.get($spacing, xxl) map.get($spacing, md);
  max-width: $page-max-width;
  margin: 0 auto;
  scale: 0.95;
  transition: opacity map.get($transitions, main),
    scale map.get($transitions, main);
}

body.content-loaded .background-drawing {
  opacity: 0.03;
  scale: 0.95;
  animation: pulse 5s ease-in-out infinite alternate 2s;
}

@keyframes pulse {
  0% {
    opacity: 0.03;
    scale: 0.95;
  }
  100% {
    opacity: 0.09;
    scale: 0.96;
  }
}

body.content-loaded .content-container {
  opacity: 1;
  scale: 1;
}

.button {
  background-color: $color-primary;
  color: $color-text-light;
  font-weight: 700;
  padding: map.get($spacing, sm) map.get($spacing, lg);
  border-radius: map.get($radiuses, pill);
  font-size: map.get($font-sizes, button);
  border: none;
  cursor: pointer;
  transition: background-color map.get($transitions, fast);

  &:hover {
    background-color: $color-text-dark;
  }

  &.secondary {
    background-color: transparent;
    color: $color-text-dark;
  }
}

label,
.label {
  text-transform: uppercase;
  font-size: map.get($font-sizes, label);
  color: $color-contact;
}

.theme-switcher {
  position: absolute;
  top: map.get($spacing, md);
  right: map.get($spacing, md);
}

a {
  color: $color-text-dark;
}

h3 {
  font-weight: 400;
  color: $color-text-dark;
}

@media (min-width: $breakpoint-md) {
  .spacer.top {
    height: $top-spacer-height;
  }
}
